server.port=8080
#debug=true

cas.server-url-prefix=https\://cas.weteoes.cn
cas.server-login-url=${cas.server-url-prefix}/login
cas.client-host-url=https\://passwordbox.weteoes.cn
#cas.client-host-url=http\://127.0.0.1:8080
cas.validation-type=CAS
cas-logout-url=${cas.server-url-prefix}/logout?service=
cas.use-session=true

spring.datasource.url=jdbc:mysql://mysql:3306/passwordbox?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=Server20000125
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# 重启时是否持久化session，默认false
server.servlet.session.persistent=true
# session超时时间
server.servlet.session.timeout=1800
# session cookie name
server.servlet.session.cookie.name=w
# REDIS (RedisProperties)
spring.session.store-type=redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=redis
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=20000125
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=10
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0
# 会话刷新模式 session更新策略，有ON_SAVE、IMMEDIATE，前者是在调用#SessionRepository#save(org.springframework.session.Session)时，在response commit前刷新缓存，#后者是只要有任何更新就会刷新缓存
spring.session.redis.flush-mode=on_save
# 用于存储会话的键的命名空间。
spring.session.redis.namespace=spring:session   

# Debug
# spring.session.store-type=none
